syntax = "proto3";

package user.v1;

option go_package = "gen/go/users/v1";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "buf/validate/validate.proto";

// User service definition
service UserService {
  rpc CreateUser(CreateUserRequest) returns (UserID) {
    option (google.api.http) = {
      post: "/v1/users"
      body: "*"
    };
  };
  rpc UpdateUser(UpdateUserRequest) returns (UserID) {
    option (google.api.http) = {
      put: "/v1/users/{id}"
      body: "user"
    };
  };
  rpc DeleteUser(UserID) returns (UserID){
    option (google.api.http) = {
      delete: "/v1/users/{id}"
    };
  };
  rpc GetUser(UserID) returns (UserResponse) {
    option (google.api.http) = {
      get: "/v1/users/{id}"
    };
  };

  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/v1/users"
    };
  };
}

// Message definitions
message User {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string nick_name = 4;
  string country_iso_code = 5;
  string email = 6;
  string password = 7;
}

message ReadableUserFields {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string nick_name = 4;
  string country_iso_code = 5;
  string email = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

message EditableUserFields {
  string first_name = 1 [(buf.validate.field).string = {
    min_len: 3;
    max_len: 25
  }];
  string last_name = 2 [(buf.validate.field).string = {
    min_len: 3;
    max_len: 25
  }];
  string nick_name = 3 [(buf.validate.field).string = {
    min_len: 3;
    max_len: 25
  }];
  string country_iso_code = 4 [(buf.validate.field).string.len = 2];
  string email = 5 [(buf.validate.field).string.email = true];
}

message UserID {
  string id = 1 [(buf.validate.field).string.uuid = true];
}

// Request payloads
message CreateUserRequest {
  string first_name = 1 [(buf.validate.field).string = {
    min_len: 3;
    max_len: 25
  }];
  string last_name = 2 [(buf.validate.field).string = {
    min_len: 3;
    max_len: 25
  }];
  string nick_name = 3 [(buf.validate.field).string = {
    min_len: 3;
    max_len: 25
  }];
  string country_iso_code = 4 [(buf.validate.field).string.len = 2];
  string email = 5 [(buf.validate.field).string.email = true];
  string password = 6 [(buf.validate.field).string = {
    min_len: 6;
    max_len: 50
  }];
}

message UpdateUserRequest {
  string id = 1 [(buf.validate.field).string.uuid = true];
  EditableUserFields user = 2;
}

message UserResponse {
  ReadableUserFields user = 1;
}

message ListUsersRequest {
  // pagination
  int32 limit = 1 [(buf.validate.field).int32.gte = 1];
  optional string cursor = 2;

  // filters
  optional string first_name = 3 [(buf.validate.field).string.min_len = 3]; 
  optional string last_name = 4 [(buf.validate.field).string.min_len = 3]; 
  optional string nick_name = 5 [(buf.validate.field).string.min_len = 3]; 
  optional string email = 6 [(buf.validate.field).string.min_len = 6]; 
  optional string country_iso_code = 7 [(buf.validate.field).string.len = 2];
}

message ListUsersResponse {
  repeated ReadableUserFields users = 1;
  string next_cursor = 2;
}